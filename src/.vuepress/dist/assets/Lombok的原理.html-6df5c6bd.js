import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,e as i,a as n,b as s,d as t,f as p}from"./app-efa8fc12.js";const u="/blog-uknow/assets/插件式注解-20230610215613-u01jca4-10fd79a0.svg",k="/blog-uknow/assets/image-20230610234841-mhs25sm-fa9181ba.png",r="/blog-uknow/assets/image-20230610234801-uxld4be-9fb17cf3.png",d="/blog-uknow/assets/Lombok执行流程-20230611001358-86q23qz-2d1f884e.svg",m={},v=n("p",null,"本文内容：",-1),g=n("ol",null,[n("li",null,[n("code",null,"Lombok"),s(" & "),n("code",null,"JSR 269")]),n("li",null,[n("code",null,"Lomobok"),s(" 执行流程")]),n("li",null,[s("模拟 "),n("code",null,"Lombok")])],-1),b=p('<h1 id="lombok的原理" tabindex="-1"><a class="header-anchor" href="#lombok的原理" aria-hidden="true">#</a> Lombok的原理</h1><p>在学习Lombok原理之前有必要先了解一下Java中的规范<code>JSR 269</code>，下面就简单的科普一下<code>JSR</code>、<code>JCP</code>以及<code>JSR 269</code>。</p><p>‍</p><h2 id="jsr" tabindex="-1"><a class="header-anchor" href="#jsr" aria-hidden="true">#</a> JSR</h2><h3 id="什么是jsr" tabindex="-1"><a class="header-anchor" href="#什么是jsr" aria-hidden="true">#</a> <strong>什么是JSR ？</strong></h3>',5),h={href:"https://jcp.org/en/home/index",target:"_blank",rel:"noopener noreferrer"},f={href:"https://jcp.org/en/jsr/all",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/mercyblitz/jsr",target:"_blank",rel:"noopener noreferrer"},w=p('<p>‍</p><h3 id="那什么是-jcp-呢" tabindex="-1"><a class="header-anchor" href="#那什么是-jcp-呢" aria-hidden="true">#</a> 那什么是 JCP 呢？</h3><p>JCP 是一家专门为 Java 技术开发标准技术规范的组织机构。</p><p>任何人都可以在官网上进行注册并参与到审查和提供 Java 规范请求（JSR）的反馈中来，也都可以注册成为 JCP 成员，然后参与 JSR 的专家组，甚至提交自己的 JSR 提案。</p><p>‍</p><h3 id="jsr269" tabindex="-1"><a class="header-anchor" href="#jsr269" aria-hidden="true">#</a> JSR269</h3><p>Lombok的实现利用了<code>JSR 269</code>​中定义的<code>Pluggable Annotation Processing API</code>​，即一个注解可以只在编译期有效，它甚至不会被编入class文件。在编译期时，注解处理器把 <code>Lombok ​</code>​的注解代码，转换为常规的 Java 方法而实现优雅地编程的。</p><p>‍</p><p>Java 的编译过程大致可以分为三个阶段：</p><ol><li>解析与填充符号表</li><li>注解处理</li><li>分析与字节码生成</li></ol><p>插入式注解处理器的触发点如下图所示：</p><figure><img src="'+u+'" alt="插件式注解.drawio.svg" tabindex="0" loading="lazy"><figcaption>插件式注解.drawio.svg</figcaption></figure><p>‍</p><h2 id="data原理" tabindex="-1"><a class="header-anchor" href="#data原理" aria-hidden="true">#</a> @Data原理</h2><p>我们可以从<code>@Data</code>​注解的使用研究一下Lombok是怎么利用<code>JSR 269</code>​特性的</p><p>‍</p><h3 id="data使用案例" tabindex="-1"><a class="header-anchor" href="#data使用案例" aria-hidden="true">#</a> @Data使用案例</h3><p>在实体类上使用 <code>@Data</code>​​​ 进行标注：</p><p>​<img src="'+k+'" alt="image" loading="lazy">​</p><p>编译之后，查看 Person 类的编译源码发现，代码竟然是这样的：</p><p>​<img src="'+r+'" alt="image" loading="lazy">​</p><p>可以看出 Person 类在编译期被注解翻译器修改成了常规的 Java 方法，添加 Getter、Setter、equals、hashCode 等方法。</p><p>‍</p><h3 id="lombok-的执行流程" tabindex="-1"><a class="header-anchor" href="#lombok-的执行流程" aria-hidden="true">#</a> Lombok 的执行流程</h3><p>Lombok 的执行流程如下：</p><figure><img src="'+d+`" alt="Lombok执行流程.drawio.svg" tabindex="0" loading="lazy"><figcaption>Lombok执行流程.drawio.svg</figcaption></figure><p>可以看出，在编译期阶段，当 Java 源码被抽象成语法树 (AST) 之后，Lombok 会根据自己的注解处理器动态的修改 AST，增加新的代码 (节点)，在这一切执行之后，再通过分析生成了最终的字节码 (.class) 文件，这就是 Lombok 的执行原理</p><p>‍</p><h2 id="手写一个lombok" tabindex="-1"><a class="header-anchor" href="#手写一个lombok" aria-hidden="true">#</a> 手写一个Lombok</h2><h3 id="工程与环境依赖" tabindex="-1"><a class="header-anchor" href="#工程与环境依赖" aria-hidden="true">#</a> 工程与环境依赖</h3><h4 id="配置maven-插件-pom-xml-编译参数" tabindex="-1"><a class="header-anchor" href="#配置maven-插件-pom-xml-编译参数" aria-hidden="true">#</a> <strong>配置maven 插件，pom.xml 编译参数</strong></h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>compilerArgs</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span><span class="token punctuation">&gt;</span></span>-parameters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>arg</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span><span class="token punctuation">&gt;</span></span>-proc:none<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>arg</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span><span class="token punctuation">&gt;</span></span>-XDignore.symbol.file<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>arg</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>compilerArgs</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>compilerArguments</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bootclasspath</span><span class="token punctuation">&gt;</span></span>
                            \${java.home}/lib/rt.jar\${path.separator}\${java.home}/lib/jce.jar\${path.separator}\${java.home}/../lib/tools.jar
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bootclasspath</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>compilerArguments</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fork</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fork</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="注意细节" tabindex="-1"><a class="header-anchor" href="#注意细节" aria-hidden="true">#</a> 注意细节</h4><ol><li>Lombok项目本身要加编译参数 ，防止编译处理器无法实例化：-proc:none</li><li>要添加编译类路径 bootclasspath： 指定tool.jar</li><li>在测试的时候 要构建一个新的工程，用一个新的IDEA窗口打开</li></ol><h3 id="注解处理器" tabindex="-1"><a class="header-anchor" href="#注解处理器" aria-hidden="true">#</a> 注解处理器</h3><ol><li>编写注解处理器,实现<code>AbstractProcessor</code>​</li><li>基于SPI指定处理器的路径 ：工程/resources/META-INF/services/javax.annotation.processing.Processor</li><li>打印消息的时候，maven 用System.out, idea用<code>Messager</code>​ 类</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SupportedSourceVersion</span><span class="token punctuation">(</span><span class="token class-name">SourceVersion</span><span class="token punctuation">.</span><span class="token constant">RELEASE_8</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@SupportedAnnotationTypes</span><span class="token punctuation">(</span><span class="token string">&quot;org.myLombok.Hello&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloProcessor</span>  <span class="token keyword">extends</span> <span class="token class-name">AbstractProcessor</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">ProcessingEnvironment</span> processingEnv<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;这是我的第一人编译注释处理器&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        processingEnv<span class="token punctuation">.</span><span class="token function">getMessager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">printMessage</span><span class="token punctuation">(</span><span class="token class-name">Diagnostic<span class="token punctuation">.</span>Kind</span><span class="token punctuation">.</span><span class="token constant">NOTE</span><span class="token punctuation">,</span><span class="token string">&quot;这是我的处理器&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">TypeElement</span><span class="token punctuation">&gt;</span></span> annotations<span class="token punctuation">,</span> <span class="token class-name">RoundEnvironment</span> roundEnv<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>‍</p><h3 id="jctree-修改语法" tabindex="-1"><a class="header-anchor" href="#jctree-修改语法" aria-hidden="true">#</a> JCTree 修改语法</h3><p>构建一个hello world 语句</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>myLombok</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * @Copyright 源码阅读网 http://coderead.cn
 */</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>javac<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">JavacTrees</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>javac<span class="token punctuation">.</span>processing<span class="token punctuation">.</span></span><span class="token class-name">JavacProcessingEnvironment</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>javac<span class="token punctuation">.</span>tree<span class="token punctuation">.</span></span><span class="token class-name">JCTree</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>javac<span class="token punctuation">.</span>tree<span class="token punctuation">.</span></span><span class="token class-name">TreeMaker</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>javac<span class="token punctuation">.</span>tree<span class="token punctuation">.</span></span><span class="token class-name">TreeTranslator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>javac<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>javac<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>javac<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Names</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>processing<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">SourceVersion</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>model<span class="token punctuation">.</span>element<span class="token punctuation">.</span></span><span class="token class-name">TypeElement</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>tools<span class="token punctuation">.</span></span><span class="token class-name">Diagnostic</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> 鲁班大叔
 * <span class="token keyword">@date</span> 2023
 */</span>
<span class="token annotation punctuation">@SupportedSourceVersion</span><span class="token punctuation">(</span><span class="token class-name">SourceVersion</span><span class="token punctuation">.</span><span class="token constant">RELEASE_8</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@SupportedAnnotationTypes</span><span class="token punctuation">(</span><span class="token string">&quot;org.myLombok.Hello&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloProcessor</span>  <span class="token keyword">extends</span> <span class="token class-name">AbstractProcessor</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">JavacTrees</span> javacTrees<span class="token punctuation">;</span> <span class="token comment">// 获取 JCTree</span>
    <span class="token keyword">private</span> <span class="token class-name">TreeMaker</span> treeMaker<span class="token punctuation">;</span> <span class="token comment">// 构建生成 JCTree</span>
    <span class="token keyword">private</span> <span class="token class-name">Names</span> names<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">ProcessingEnvironment</span> processingEnv<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;这是我的第一人编译注释处理器&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        processingEnv<span class="token punctuation">.</span><span class="token function">getMessager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">printMessage</span><span class="token punctuation">(</span><span class="token class-name">Diagnostic<span class="token punctuation">.</span>Kind</span><span class="token punctuation">.</span><span class="token constant">NOTE</span><span class="token punctuation">,</span><span class="token string">&quot;这是我的处理器&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        javacTrees <span class="token operator">=</span> <span class="token class-name">JavacTrees</span><span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span>processingEnv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 语法树</span>
        <span class="token class-name">Context</span> context <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">JavacProcessingEnvironment</span><span class="token punctuation">)</span> processingEnv<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>treeMaker <span class="token operator">=</span> <span class="token class-name">TreeMaker</span><span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>processingEnv<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>names <span class="token operator">=</span> <span class="token class-name">Names</span><span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">TypeElement</span><span class="token punctuation">&gt;</span></span> annotations<span class="token punctuation">,</span> <span class="token class-name">RoundEnvironment</span> roundEnv<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        annotations<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>t<span class="token operator">-&gt;</span>roundEnv<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>t<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                    <span class="token class-name">JCTree</span> tree <span class="token operator">=</span> javacTrees<span class="token punctuation">.</span><span class="token function">getTree</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                 <span class="token comment">// 基于访问者设计模式 去修改方法</span>
                    tree<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TreeTranslator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token annotation punctuation">@Override</span>
                        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">visitMethodDef</span><span class="token punctuation">(</span><span class="token class-name">JCTree<span class="token punctuation">.</span>JCMethodDecl</span> tree<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// System.out.println(&quot;hello world&quot;);</span>
                            <span class="token class-name">JCTree<span class="token punctuation">.</span>JCStatement</span> sysout <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">treeMaker<span class="token punctuation">.</span></span>Exec</span><span class="token punctuation">(</span>
                                    <span class="token class-name"><span class="token namespace">treeMaker<span class="token punctuation">.</span></span>Apply</span><span class="token punctuation">(</span>
                                            <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">nil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                            <span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;System.out.println&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                            <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">treeMaker<span class="token punctuation">.</span></span>Literal</span><span class="token punctuation">(</span><span class="token string">&quot;hello world!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 方法中的内容</span>
                                    <span class="token punctuation">)</span>
                            <span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token comment">// 覆盖原有的语句块</span>
                            tree<span class="token punctuation">.</span>body<span class="token punctuation">.</span>stats<span class="token operator">=</span>tree<span class="token punctuation">.</span>body<span class="token punctuation">.</span>stats<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>sysout<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">visitMethodDef</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">private</span> <span class="token class-name">JCTree<span class="token punctuation">.</span>JCFieldAccess</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">JCTree<span class="token punctuation">.</span>JCExpression</span> selected<span class="token punctuation">,</span> <span class="token class-name">String</span> expressive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name"><span class="token namespace">treeMaker<span class="token punctuation">.</span></span>Select</span><span class="token punctuation">(</span>selected<span class="token punctuation">,</span> names<span class="token punctuation">.</span><span class="token function">fromString</span><span class="token punctuation">(</span>expressive<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">JCTree<span class="token punctuation">.</span>JCFieldAccess</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">String</span> expressive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> exps <span class="token operator">=</span> expressive<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JCTree<span class="token punctuation">.</span>JCFieldAccess</span> access <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">treeMaker<span class="token punctuation">.</span></span>Select</span><span class="token punctuation">(</span><span class="token function">ident</span><span class="token punctuation">(</span>exps<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> names<span class="token punctuation">.</span><span class="token function">fromString</span><span class="token punctuation">(</span>exps<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> exps<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            access <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">treeMaker<span class="token punctuation">.</span></span>Select</span><span class="token punctuation">(</span>access<span class="token punctuation">,</span> names<span class="token punctuation">.</span><span class="token function">fromString</span><span class="token punctuation">(</span>exps<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> access<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">JCTree<span class="token punctuation">.</span>JCIdent</span> <span class="token function">ident</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name"><span class="token namespace">treeMaker<span class="token punctuation">.</span></span>Ident</span><span class="token punctuation">(</span>names<span class="token punctuation">.</span><span class="token function">fromString</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>‍</p>`,42);function x(J,S){const a=o("ExternalLinkIcon");return c(),l("div",null,[v,g,i(" more "),b,n("p",null,[s("JSR（Java Specification Requests），是指 Java 规范请求（或者规范提案）。这个请求（提案）是提给 "),n("a",h,[s("JCP"),t(a)]),s(" 的（Java Community Process）。")]),n("p",null,[s("我们可以从官网上看到所有的 JSR 规范："),n("a",f,[s("https://jcp.org/en/jsr/all"),t(a)]),s("。")]),n("p",null,[s("JSR相关的PDF可以从这个仓库中获取："),n("a",y,[s("https://github.com/mercyblitz/jsr"),t(a)]),s("。")]),w])}const T=e(m,[["render",x],["__file","Lombok的原理.html.vue"]]);export{T as default};
